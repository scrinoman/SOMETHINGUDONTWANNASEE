#pragma once

enum TokenType
{
	//WIDE_CHAR,
	//T_CHAR,
	ERROR,
	IDENTIFIER,
	INTEGER_DEC_NUMBER,
	//INTEGER_OCT_NUMBER,
	//INTEGER_HEX_NUMBER,
	FLOAT_NUMBER,
	CHARACTER,
	STRING,
	//AUTO,
	BREAK,
	//CASE,
	CHAR,
	CIN, //new
	COUT, //new
	MAP, //new
	//CLASS,
	CONST,
	CONTINUE,
	//DEFAULT,
	//DECLTYPE,
	//DO,
	DOUBLE,
	ELSE,
	//ENUM,
	//EXTERN,
	//FALSE,
	FLOAT,
	FOR,
	//FRIEND,
	//GOTO,
	IF,
	INT,
	//BITS_INT,
	//INTERNAL,
	//LONG,
	//NAMESPACE,
	//OPERATOR,
	//PRIVATE,
	//PUBLIC,
	//PROTECTED,
	//REGISTER,
	RETURN,
	//SHORT,
	//SIGNED,
	//SIZEOF,
	//STATIC,
	//STRUCT,
	//SWITCH,
	//TYPEDEF,
	//THROW,
	//TRUE,
	//TRY,
	//UNION,
	//UNSIGNED,
	//USING,
	//VOID,
	//VOLATILE,
	WHILE,
	SEMICOLON,
	COMMA,
	CURLY_BRACKET_L,
	CURLY_BRACKET_R,
	//COLON,
	BRACKET_L,
	BRACKET_R,
	SQUARE_BRACKET_L,
	SQUARE_BRACKET_R,
	TILDE,
	/*TERNARY_IF,
	ELLIPSIS,*/
	PLUS,
	MINUS,
	STAR,
	DIVIDE,
	MODULE,
	DOT,
	LESS,
	GREATER,
	LESS_OR_EQUAL,
	GREATER_OR_EQUAL,
	EQUAL,
	//PIPE,
	ASSIGN,
	LOGICAL_AND,
	LOGICAL_OR,
	AMPERSAND,
	OR,
	XOR,
	NOT,
	NOT_EQUAL,
	/*PTR,
	INC,
	DEC,
	*/LEFT_SHIFT,
	RIGHT_SHIFT,
	/*ADD_ASSIGN,
	SUB_ASSIGN,
	MUL_ASSIGN,
	DIV_ASSIGN,
	MOD_ASSIGN,
	AND_ASSIGN,
	OR_ASSIGN,
	XOR_ASSIGN,
	LEFT_SHIFT_ASSIGN,
	RIGHT_SHIFT_ASSIGN,
	WHITESPACE*/
};