#pragma once
#include "stdafx.h"
#include "TokenType.h"

static std::map<TokenType, std::string> tokenStringName = {
	{ TokenType::CHAR, "CHAR" },
	{ TokenType::CIN, "CIN" },
	{ TokenType::COUT, "COUT" },
	{ TokenType::MAP, "MAP" },
	{ TokenType::STR, "STRING" },
	{ TokenType::ELSE, "ELSE" },
	{ TokenType::FLOAT, "FLOAT" },
	{ TokenType::FOR, "FOR" },
	{ TokenType::IF, "IF" },
	{ TokenType::INT, "INT" },
	{ TokenType::RETURN, "RETURN" },
	{ TokenType::VOID, "VOID" },
	{ TokenType::WHILE, "WHILE" },
	{ TokenType::SEMICOLON, "SEMICOLON" },
	{ TokenType::COMMA, "COMMA" },
	{ TokenType::CURLY_BRACKET_L, "BRACE_L" },
	{ TokenType::CURLY_BRACKET_R, "BRACE_R" },
	{ TokenType::BRACKET_L, "PARENTHESIS_L" },
	{ TokenType::BRACKET_R, "PARENTHESIS_R" },
	{ TokenType::SQUARE_BRACKET_L, "SQUARE_BRACKET_L" },
	{ TokenType::SQUARE_BRACKET_R, "SQUARE_BRACKET_R" },
	{ TokenType::TILDE, "TILDE" },
	{ TokenType::PLUS, "PLUS" },
	{ TokenType::MINUS, "MINUS" },
	{ TokenType::STAR, "STAR" },
	{ TokenType::DIVIDE, "SLASH" },
	{ TokenType::MODULE, "PERCENT" },
	{ TokenType::DOT, "PERIOD" },
	{ TokenType::LESS, "LESS" },
	{ TokenType::GREATER, "GREATER" },
	{ TokenType::LESS_OR_EQUAL, "LE_OP" },
	{ TokenType::GREATER_OR_EQUAL, "GE_OP" },
	{ TokenType::EQUAL, "EQ_OP" },
	{ TokenType::ASSIGN, "ASSIGN_OP" },
	{ TokenType::LOGICAL_AND, "AND_OP" },
	{ TokenType::LOGICAL_OR, "OR_OP" },
	{ TokenType::AMPERSAND, "AMPERSAND" },
	{ TokenType::OR, "OR" },
	{ TokenType::XOR, "XOR" },
	{ TokenType::NOT, "NOT" },
	{ TokenType::NOT_EQUAL, "NE_OP" },
	{ TokenType::LEFT_SHIFT, "LEFT_OP" },
	{ TokenType::RIGHT_SHIFT, "RIGHT_OP" },
	{ TokenType::ERROR, "ERROR" },
	{ TokenType::IDENTIFIER, "IDENTIFIER" },
	{ TokenType::INTEGER_DEC_NUMBER, "CONST_INTEGER" },
	{ TokenType::FLOAT_NUMBER, "CONST_FLOAT" },
	{ TokenType::CHARACTER, "CONST_CHARACTER" },
	{ TokenType::STRING, "CONST_STRING" }
};
