1 void VOID
1 main IDENTIFIER
1 ( PARENTHESIS_L
1 ) PARENTHESIS_R
2 { BRACE_L
3 int INT
3 seed IDENTIFIER
3 = ASSIGN_OP
3 200 CONST_INTEGER
3 ; SEMICOLON
4 map MAP
4 < LESS
4 int INT
4 , COMMA
4 float FLOAT
4 > GREATER
4 s IDENTIFIER
4 ; SEMICOLON
5 for FOR
5 ( PARENTHESIS_L
5 int INT
5 i IDENTIFIER
5 = ASSIGN_OP
5 0 CONST_INTEGER
5 ; SEMICOLON
5 i IDENTIFIER
5 < LESS
5 seed IDENTIFIER
5 ; SEMICOLON
5 i IDENTIFIER
5 = ASSIGN_OP
5 i IDENTIFIER
5 + PLUS
5 1 CONST_INTEGER
5 ) PARENTHESIS_R
6 { BRACE_L
7 s IDENTIFIER
7 [ SQUARE_BRACKET_L
7 i IDENTIFIER
7 ] SQUARE_BRACKET_R
7 = ASSIGN_OP
7 i IDENTIFIER
7 / SLASH
7 ( PARENTHESIS_L
7 1.0 CONST_FLOAT
7 * STAR
7 ( PARENTHESIS_L
7 seed IDENTIFIER
7 - MINUS
7 1 CONST_INTEGER
7 ) PARENTHESIS_R
7 ) PARENTHESIS_R
7 ; SEMICOLON
8 } BRACE_R
10 for FOR
10 ( PARENTHESIS_L
10 int INT
10 i IDENTIFIER
10 = ASSIGN_OP
10 0 CONST_INTEGER
10 ; SEMICOLON
10 i IDENTIFIER
10 < LESS
10 seed IDENTIFIER
10 ; SEMICOLON
10 i IDENTIFIER
10 = ASSIGN_OP
10 i IDENTIFIER
10 + PLUS
10 1 CONST_INTEGER
10 ) PARENTHESIS_R
11 { BRACE_L
12 cout COUT
12 << LEFT_OP
12 s IDENTIFIER
12 [ SQUARE_BRACKET_L
12 i IDENTIFIER
12 ] SQUARE_BRACKET_R
12 ; SEMICOLON
13 cout COUT
13 << LEFT_OP
13 '\n' CONST_CHARACTER
13 ; SEMICOLON
14 } BRACE_R
15 } BRACE_R
