1 char CHAR
1 newFunction IDENTIFIER
1 ( PARENTHESIS_L
1 string STRING
1 s IDENTIFIER
1 ) PARENTHESIS_R
2 { BRACE_L
3 for FOR
3 ( PARENTHESIS_L
3 int INT
3 i IDENTIFIER
3 = ASSIGN_OP
3 0 CONST_INTEGER
3 ; SEMICOLON
3 i IDENTIFIER
3 < LESS
3 4 CONST_INTEGER
3 ; SEMICOLON
3 i IDENTIFIER
3 = ASSIGN_OP
3 i IDENTIFIER
3 + PLUS
3 1 CONST_INTEGER
3 ) PARENTHESIS_R
4 { BRACE_L
5 } BRACE_R
7 if IF
7 ( PARENTHESIS_L
7 a IDENTIFIER
7 > GREATER
7 3 CONST_INTEGER
7 || OR_OP
7 b IDENTIFIER
7 <= LE_OP
7 'a' CONST_CHARACTER
7 && AND_OP
7 ( PARENTHESIS_L
7 b IDENTIFIER
7 > GREATER
7 5 CONST_INTEGER
7 && AND_OP
7 w IDENTIFIER
7 == EQ_OP
7 "fhhfhf" CONST_STRING
7 ) PARENTHESIS_R
7 ) PARENTHESIS_R
8 { BRACE_L
9 while WHILE
9 ( PARENTHESIS_L
9 o IDENTIFIER
9 != NE_OP
9 u IDENTIFIER
9 ) PARENTHESIS_R
10 { BRACE_L
11 } BRACE_R
13 for FOR
13 ( PARENTHESIS_L
13 int INT
13 i IDENTIFIER
13 = ASSIGN_OP
13 0 CONST_INTEGER
13 ; SEMICOLON
13 i IDENTIFIER
13 < LESS
13 4 CONST_INTEGER
13 ; SEMICOLON
13 i IDENTIFIER
13 = ASSIGN_OP
13 i IDENTIFIER
13 + PLUS
13 1 CONST_INTEGER
13 ) PARENTHESIS_R
14 { BRACE_L
15 } BRACE_R
16 } BRACE_R
18 while WHILE
18 ( PARENTHESIS_L
18 ! NOT
18 ( PARENTHESIS_L
18 a IDENTIFIER
18 >= GE_OP
18 b IDENTIFIER
18 ) PARENTHESIS_R
18 && AND_OP
18 ! NOT
18 ( PARENTHESIS_L
18 o IDENTIFIER
18 != NE_OP
18 b IDENTIFIER
18 + PLUS
18 3 CONST_INTEGER
18 - MINUS
18 m IDENTIFIER
18 [ SQUARE_BRACKET_L
18 3 CONST_INTEGER
18 ] SQUARE_BRACKET_R
18 [ SQUARE_BRACKET_L
18 2 CONST_INTEGER
18 ] SQUARE_BRACKET_R
18 ) PARENTHESIS_R
18 ) PARENTHESIS_R
19 { BRACE_L
20 } BRACE_R
21 return RETURN
21 'a' CONST_CHARACTER
21 ; SEMICOLON
22 } BRACE_R
24 void VOID
24 ae IDENTIFIER
24 ( PARENTHESIS_L
24 int INT
24 x IDENTIFIER
24 ) PARENTHESIS_R
25 { BRACE_L
26 int INT
26 p IDENTIFIER
26 = ASSIGN_OP
26 ( PARENTHESIS_L
26 q IDENTIFIER
26 ( PARENTHESIS_L
26 1 CONST_INTEGER
26 , COMMA
26 d IDENTIFIER
26 + PLUS
26 p IDENTIFIER
26 [ SQUARE_BRACKET_L
26 3 CONST_INTEGER
26 ] SQUARE_BRACKET_R
26 [ SQUARE_BRACKET_L
26 4 CONST_INTEGER
26 ] SQUARE_BRACKET_R
26 ) PARENTHESIS_R
26 ) PARENTHESIS_R
26 ; SEMICOLON
27 int INT
27 u IDENTIFIER
27 = ASSIGN_OP
27 ( PARENTHESIS_L
27 6 CONST_INTEGER
27 + PLUS
27 d2 IDENTIFIER
27 ( PARENTHESIS_L
27 3 CONST_INTEGER
27 ) PARENTHESIS_R
27 ) PARENTHESIS_R
27 ; SEMICOLON
28 float FLOAT
28 er IDENTIFIER
28 [ SQUARE_BRACKET_L
28 2 CONST_INTEGER
28 ] SQUARE_BRACKET_R
28 [ SQUARE_BRACKET_L
28 44 CONST_INTEGER
28 + PLUS
28 q IDENTIFIER
28 * STAR
28 ( PARENTHESIS_L
28 6 CONST_INTEGER
28 + PLUS
28 d IDENTIFIER
28 [ SQUARE_BRACKET_L
28 2 CONST_INTEGER
28 % PERCENT
28 e IDENTIFIER
28 ( PARENTHESIS_L
28 3 CONST_INTEGER
28 , COMMA
28 555 CONST_INTEGER
28 * STAR
28 d IDENTIFIER
28 [ SQUARE_BRACKET_L
28 6 CONST_INTEGER
28 ] SQUARE_BRACKET_R
28 ) PARENTHESIS_R
28 ] SQUARE_BRACKET_R
28 ) PARENTHESIS_R
28 ] SQUARE_BRACKET_R
28 ; SEMICOLON
29 } BRACE_R
31 string STRING
31 qqqq IDENTIFIER
31 ( PARENTHESIS_L
31 ) PARENTHESIS_R
32 { BRACE_L
33 cout COUT
33 << LEFT_OP
33 "fhjdjfd" CONST_STRING
33 ; SEMICOLON
34 cout COUT
34 << LEFT_OP
34 func IDENTIFIER
34 ( PARENTHESIS_L
34 ) PARENTHESIS_R
34 ; SEMICOLON
35 cout COUT
35 << LEFT_OP
35 a IDENTIFIER
35 [ SQUARE_BRACKET_L
35 2 CONST_INTEGER
35 + PLUS
35 func IDENTIFIER
35 ( PARENTHESIS_L
35 ) PARENTHESIS_R
35 ] SQUARE_BRACKET_R
35 ; SEMICOLON
36 cin CIN
36 >> RIGHT_OP
36 s IDENTIFIER
36 ; SEMICOLON
37 cin CIN
37 >> RIGHT_OP
37 m IDENTIFIER
37 [ SQUARE_BRACKET_L
37 0 CONST_INTEGER
37 ] SQUARE_BRACKET_R
37 [ SQUARE_BRACKET_L
37 0 CONST_INTEGER
37 ] SQUARE_BRACKET_R
37 ; SEMICOLON
38 cin CIN
38 >> RIGHT_OP
38 non_func IDENTIFIER
38 ; SEMICOLON
40 return RETURN
40 "ssss" CONST_STRING
40 ; SEMICOLON
41 } BRACE_R
43 int INT
43 main IDENTIFIER
43 ( PARENTHESIS_L
43 int INT
43 a IDENTIFIER
43 , COMMA
43 string STRING
43 b IDENTIFIER
43 , COMMA
43 char CHAR
43 c IDENTIFIER
43 ) PARENTHESIS_R
44 { BRACE_L
45 a IDENTIFIER
45 [ SQUARE_BRACKET_L
45 34 CONST_INTEGER
45 ] SQUARE_BRACKET_R
45 = ASSIGN_OP
45 4 CONST_INTEGER
45 ; SEMICOLON
46 int INT
46 q IDENTIFIER
46 = ASSIGN_OP
46 4 CONST_INTEGER
46 ; SEMICOLON
47 int INT
47 a IDENTIFIER
47 [ SQUARE_BRACKET_L
47 4 CONST_INTEGER
47 ] SQUARE_BRACKET_R
47 ; SEMICOLON
48 q IDENTIFIER
48 = ASSIGN_OP
48 12354 CONST_INTEGER
48 ; SEMICOLON
49 float FLOAT
49 er IDENTIFIER
49 [ SQUARE_BRACKET_L
49 2 CONST_INTEGER
49 ] SQUARE_BRACKET_R
49 [ SQUARE_BRACKET_L
49 44 CONST_INTEGER
49 + PLUS
49 ww IDENTIFIER
49 [ SQUARE_BRACKET_L
49 "hjfdf" CONST_STRING
49 ] SQUARE_BRACKET_R
49 / SLASH
49 j IDENTIFIER
49 [ SQUARE_BRACKET_L
49 i IDENTIFIER
49 + PLUS
49 3 CONST_INTEGER
49 ] SQUARE_BRACKET_R
49 [ SQUARE_BRACKET_L
49 4 CONST_INTEGER
49 * STAR
49 g IDENTIFIER
49 ] SQUARE_BRACKET_R
49 ] SQUARE_BRACKET_R
49 ; SEMICOLON
51 int INT
51 wrnjnf IDENTIFIER
51 = ASSIGN_OP
51 14 CONST_INTEGER
51 ; SEMICOLON
52 string STRING
52 s IDENTIFIER
52 = ASSIGN_OP
52 3 CONST_INTEGER
52 ; SEMICOLON
53 int INT
53 a IDENTIFIER
53 = ASSIGN_OP
53 ( PARENTHESIS_L
53 f IDENTIFIER
53 - MINUS
53 - MINUS
53 d IDENTIFIER
53 * STAR
53 ( PARENTHESIS_L
53 9 CONST_INTEGER
53 + PLUS
53 6 CONST_INTEGER
53 ) PARENTHESIS_R
53 - MINUS
53 ( PARENTHESIS_L
53 4 CONST_INTEGER
53 + PLUS
53 1512 CONST_INTEGER
53 - MINUS
53 ( PARENTHESIS_L
53 e IDENTIFIER
53 / SLASH
53 9 CONST_INTEGER
53 ) PARENTHESIS_R
53 * STAR
53 d IDENTIFIER
53 ) PARENTHESIS_R
53 ) PARENTHESIS_R
53 ; SEMICOLON
54 map MAP
54 < LESS
54 string STRING
54 , COMMA
54 int INT
54 > GREATER
54 abba IDENTIFIER
54 ; SEMICOLON
56 return RETURN
56 0 CONST_INTEGER
56 ; SEMICOLON
57 } BRACE_R
