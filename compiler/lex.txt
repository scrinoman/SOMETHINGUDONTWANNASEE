1 void VOID
1 main IDENTIFIER
1 ( PARENTHESIS_L
1 ) PARENTHESIS_R
2 { BRACE_L
3 int INT
3 a IDENTIFIER
3 [ SQUARE_BRACKET_L
3 20 CONST_INTEGER
3 ] SQUARE_BRACKET_R
3 ; SEMICOLON
4 for FOR
4 ( PARENTHESIS_L
4 int INT
4 i IDENTIFIER
4 = ASSIGN_OP
4 0 CONST_INTEGER
4 ; SEMICOLON
4 i IDENTIFIER
4 < LESS
4 20 CONST_INTEGER
4 ; SEMICOLON
4 i IDENTIFIER
4 = ASSIGN_OP
4 i IDENTIFIER
4 + PLUS
4 1 CONST_INTEGER
4 ) PARENTHESIS_R
5 { BRACE_L
6 cin CIN
6 >> RIGHT_OP
6 a IDENTIFIER
6 [ SQUARE_BRACKET_L
6 i IDENTIFIER
6 ] SQUARE_BRACKET_R
6 ; SEMICOLON
7 } BRACE_R
9 for FOR
9 ( PARENTHESIS_L
9 int INT
9 i IDENTIFIER
9 = ASSIGN_OP
9 0 CONST_INTEGER
9 ; SEMICOLON
9 i IDENTIFIER
9 < LESS
9 20 CONST_INTEGER
9 ; SEMICOLON
9 i IDENTIFIER
9 = ASSIGN_OP
9 i IDENTIFIER
9 + PLUS
9 1 CONST_INTEGER
9 ) PARENTHESIS_R
10 { BRACE_L
11 for FOR
11 ( PARENTHESIS_L
11 int INT
11 j IDENTIFIER
11 = ASSIGN_OP
11 i IDENTIFIER
11 + PLUS
11 1 CONST_INTEGER
11 ; SEMICOLON
11 j IDENTIFIER
11 < LESS
11 20 CONST_INTEGER
11 ; SEMICOLON
11 j IDENTIFIER
11 = ASSIGN_OP
11 j IDENTIFIER
11 + PLUS
11 1 CONST_INTEGER
11 ) PARENTHESIS_R
12 { BRACE_L
13 if IF
13 ( PARENTHESIS_L
13 a IDENTIFIER
13 [ SQUARE_BRACKET_L
13 i IDENTIFIER
13 ] SQUARE_BRACKET_R
13 > GREATER
13 a IDENTIFIER
13 [ SQUARE_BRACKET_L
13 j IDENTIFIER
13 ] SQUARE_BRACKET_R
13 ) PARENTHESIS_R
14 { BRACE_L
15 int INT
15 t IDENTIFIER
15 = ASSIGN_OP
15 a IDENTIFIER
15 [ SQUARE_BRACKET_L
15 i IDENTIFIER
15 ] SQUARE_BRACKET_R
15 ; SEMICOLON
16 a IDENTIFIER
16 [ SQUARE_BRACKET_L
16 i IDENTIFIER
16 ] SQUARE_BRACKET_R
16 = ASSIGN_OP
16 a IDENTIFIER
16 [ SQUARE_BRACKET_L
16 j IDENTIFIER
16 ] SQUARE_BRACKET_R
16 ; SEMICOLON
17 a IDENTIFIER
17 [ SQUARE_BRACKET_L
17 j IDENTIFIER
17 ] SQUARE_BRACKET_R
17 = ASSIGN_OP
17 t IDENTIFIER
17 ; SEMICOLON
18 } BRACE_R
19 } BRACE_R
20 } BRACE_R
22 for FOR
22 ( PARENTHESIS_L
22 int INT
22 i IDENTIFIER
22 = ASSIGN_OP
22 0 CONST_INTEGER
22 ; SEMICOLON
22 i IDENTIFIER
22 < LESS
22 20 CONST_INTEGER
22 ; SEMICOLON
22 i IDENTIFIER
22 = ASSIGN_OP
22 i IDENTIFIER
22 + PLUS
22 1 CONST_INTEGER
22 ) PARENTHESIS_R
23 { BRACE_L
24 cout COUT
24 << LEFT_OP
24 a IDENTIFIER
24 [ SQUARE_BRACKET_L
24 i IDENTIFIER
24 ] SQUARE_BRACKET_R
24 ; SEMICOLON
25 cout COUT
25 << LEFT_OP
25 " " CONST_STRING
25 << LEFT_OP
25 " " CONST_STRING
25 ; SEMICOLON
26 } BRACE_R
27 } BRACE_R
