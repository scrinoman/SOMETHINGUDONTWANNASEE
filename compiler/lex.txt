1 void VOID
1 check1 IDENTIFIER
1 ( PARENTHESIS_L
1 int INT
1 u IDENTIFIER
1 , COMMA
1 string STRING
1 oo IDENTIFIER
1 ) PARENTHESIS_R
2 { BRACE_L
3 int INT
3 a IDENTIFIER
3 ; SEMICOLON
4 int INT
4 j IDENTIFIER
4 ; SEMICOLON
5 int INT
5 p IDENTIFIER
5 = ASSIGN_OP
5 a IDENTIFIER
5 + PLUS
5 u IDENTIFIER
5 ; SEMICOLON
6 if IF
6 ( PARENTHESIS_L
6 a IDENTIFIER
6 > GREATER
6 j IDENTIFIER
6 && AND_OP
6 ( PARENTHESIS_L
6 p IDENTIFIER
6 * STAR
6 3 CONST_INTEGER
6 != NE_OP
6 j IDENTIFIER
6 ) PARENTHESIS_R
6 ) PARENTHESIS_R
7 { BRACE_L
8 } BRACE_R
9 int INT
9 z IDENTIFIER
9 [ SQUARE_BRACKET_L
9 3 CONST_INTEGER
9 ] SQUARE_BRACKET_R
9 ; SEMICOLON
10 char CHAR
10 b IDENTIFIER
10 [ SQUARE_BRACKET_L
10 2 CONST_INTEGER
10 ] SQUARE_BRACKET_R
10 ; SEMICOLON
11 int INT
11 q IDENTIFIER
11 = ASSIGN_OP
11 a IDENTIFIER
11 + PLUS
11 z IDENTIFIER
11 [ SQUARE_BRACKET_L
11 2 CONST_INTEGER
11 ] SQUARE_BRACKET_R
11 ; SEMICOLON
12 float FLOAT
12 c IDENTIFIER
12 [ SQUARE_BRACKET_L
12 a IDENTIFIER
12 ] SQUARE_BRACKET_R
12 ; SEMICOLON
13 string STRING
13 s IDENTIFIER
13 [ SQUARE_BRACKET_L
13 a IDENTIFIER
13 + PLUS
13 222 CONST_INTEGER
13 ] SQUARE_BRACKET_R
13 ; SEMICOLON
14 int INT
14 d IDENTIFIER
14 [ SQUARE_BRACKET_L
14 2 CONST_INTEGER
14 ] SQUARE_BRACKET_R
14 [ SQUARE_BRACKET_L
14 33 CONST_INTEGER
14 ] SQUARE_BRACKET_R
14 ; SEMICOLON
15 float FLOAT
15 f IDENTIFIER
15 [ SQUARE_BRACKET_L
15 a IDENTIFIER
15 ] SQUARE_BRACKET_R
15 [ SQUARE_BRACKET_L
15 23 CONST_INTEGER
15 ] SQUARE_BRACKET_R
15 ; SEMICOLON
16 string STRING
16 g IDENTIFIER
16 [ SQUARE_BRACKET_L
16 a IDENTIFIER
16 + PLUS
16 22 CONST_INTEGER
16 ] SQUARE_BRACKET_R
16 [ SQUARE_BRACKET_L
16 a IDENTIFIER
16 ] SQUARE_BRACKET_R
16 ; SEMICOLON
17 } BRACE_R
19 int INT
19 check2 IDENTIFIER
19 ( PARENTHESIS_L
19 ) PARENTHESIS_R
20 { BRACE_L
21 int INT
21 p IDENTIFIER
21 ; SEMICOLON
22 string STRING
22 a IDENTIFIER
22 ; SEMICOLON
23 int INT
23 w IDENTIFIER
23 = ASSIGN_OP
23 check1 IDENTIFIER
23 ( PARENTHESIS_L
23 p IDENTIFIER
23 , COMMA
23 a IDENTIFIER
23 ) PARENTHESIS_R
23 ; SEMICOLON
24 int INT
24 e IDENTIFIER
24 = ASSIGN_OP
24 check2 IDENTIFIER
24 ( PARENTHESIS_L
24 ) PARENTHESIS_R
24 ; SEMICOLON
25 } BRACE_R
