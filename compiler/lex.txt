1 char CHAR
1 newFunction IDENTIFIER
1 ( PARENTHESIS_L
1 string STRING
1 s IDENTIFIER
1 , COMMA
1 char CHAR
1 t IDENTIFIER
1 ) PARENTHESIS_R
2 { BRACE_L
3 u IDENTIFIER
3 = ASSIGN_OP
3 f IDENTIFIER
3 ( PARENTHESIS_L
3 a IDENTIFIER
3 , COMMA
3 b IDENTIFIER
3 ) PARENTHESIS_R
3 ; SEMICOLON
4 if IF
4 ( PARENTHESIS_L
4 a IDENTIFIER
4 > GREATER
4 b IDENTIFIER
4 ) PARENTHESIS_R
5 { BRACE_L
6 } BRACE_R
7 for FOR
7 ( PARENTHESIS_L
7 int INT
7 i IDENTIFIER
7 = ASSIGN_OP
7 0 CONST_INTEGER
7 ; SEMICOLON
7 i IDENTIFIER
7 < LESS
7 4 CONST_INTEGER
7 ; SEMICOLON
7 i IDENTIFIER
7 = ASSIGN_OP
7 i IDENTIFIER
7 + PLUS
7 1 CONST_INTEGER
7 ) PARENTHESIS_R
8 { BRACE_L
9 } BRACE_R
11 if IF
11 ( PARENTHESIS_L
11 a IDENTIFIER
11 > GREATER
11 3 CONST_INTEGER
11 || OR_OP
11 b IDENTIFIER
11 <= LE_OP
11 'a' CONST_CHARACTER
11 && AND_OP
11 ( PARENTHESIS_L
11 b IDENTIFIER
11 > GREATER
11 5 CONST_INTEGER
11 && AND_OP
11 w IDENTIFIER
11 == EQ_OP
11 "fhhfhf" CONST_STRING
11 ) PARENTHESIS_R
11 ) PARENTHESIS_R
12 { BRACE_L
13 while WHILE
13 ( PARENTHESIS_L
13 o IDENTIFIER
13 != NE_OP
13 u IDENTIFIER
13 ) PARENTHESIS_R
14 { BRACE_L
15 } BRACE_R
17 for FOR
17 ( PARENTHESIS_L
17 int INT
17 i IDENTIFIER
17 = ASSIGN_OP
17 0 CONST_INTEGER
17 ; SEMICOLON
17 i IDENTIFIER
17 < LESS
17 4 CONST_INTEGER
17 ; SEMICOLON
17 i IDENTIFIER
17 = ASSIGN_OP
17 i IDENTIFIER
17 + PLUS
17 1 CONST_INTEGER
17 ) PARENTHESIS_R
18 { BRACE_L
19 } BRACE_R
20 } BRACE_R
22 while WHILE
22 ( PARENTHESIS_L
22 ! NOT
22 ( PARENTHESIS_L
22 a IDENTIFIER
22 >= GE_OP
22 b IDENTIFIER
22 ) PARENTHESIS_R
22 && AND_OP
22 ! NOT
22 ( PARENTHESIS_L
22 o IDENTIFIER
22 != NE_OP
22 b IDENTIFIER
22 + PLUS
22 3 CONST_INTEGER
22 - MINUS
22 m IDENTIFIER
22 [ SQUARE_BRACKET_L
22 3 CONST_INTEGER
22 ] SQUARE_BRACKET_R
22 [ SQUARE_BRACKET_L
22 2 CONST_INTEGER
22 ] SQUARE_BRACKET_R
22 ) PARENTHESIS_R
22 ) PARENTHESIS_R
23 { BRACE_L
24 } BRACE_R
25 return RETURN
25 'a' CONST_CHARACTER
25 ; SEMICOLON
26 } BRACE_R
28 void VOID
28 ae IDENTIFIER
28 ( PARENTHESIS_L
28 int INT
28 x IDENTIFIER
28 ) PARENTHESIS_R
29 { BRACE_L
30 int INT
30 p IDENTIFIER
30 = ASSIGN_OP
30 ( PARENTHESIS_L
30 q IDENTIFIER
30 ( PARENTHESIS_L
30 1 CONST_INTEGER
30 , COMMA
30 d IDENTIFIER
30 + PLUS
30 p IDENTIFIER
30 [ SQUARE_BRACKET_L
30 3 CONST_INTEGER
30 ] SQUARE_BRACKET_R
30 [ SQUARE_BRACKET_L
30 4 CONST_INTEGER
30 ] SQUARE_BRACKET_R
30 ) PARENTHESIS_R
30 ) PARENTHESIS_R
30 ; SEMICOLON
31 int INT
31 u IDENTIFIER
31 = ASSIGN_OP
31 ( PARENTHESIS_L
31 6 CONST_INTEGER
31 + PLUS
31 d2 IDENTIFIER
31 ( PARENTHESIS_L
31 3 CONST_INTEGER
31 ) PARENTHESIS_R
31 ) PARENTHESIS_R
31 ; SEMICOLON
32 float FLOAT
32 er IDENTIFIER
32 [ SQUARE_BRACKET_L
32 2 CONST_INTEGER
32 ] SQUARE_BRACKET_R
32 [ SQUARE_BRACKET_L
32 44 CONST_INTEGER
32 + PLUS
32 q IDENTIFIER
32 * STAR
32 ( PARENTHESIS_L
32 6 CONST_INTEGER
32 + PLUS
32 d IDENTIFIER
32 [ SQUARE_BRACKET_L
32 2 CONST_INTEGER
32 % PERCENT
32 e IDENTIFIER
32 ( PARENTHESIS_L
32 3 CONST_INTEGER
32 , COMMA
32 555 CONST_INTEGER
32 * STAR
32 d IDENTIFIER
32 [ SQUARE_BRACKET_L
32 6 CONST_INTEGER
32 ] SQUARE_BRACKET_R
32 ) PARENTHESIS_R
32 ] SQUARE_BRACKET_R
32 ) PARENTHESIS_R
32 ] SQUARE_BRACKET_R
32 ; SEMICOLON
33 } BRACE_R
35 string STRING
35 qqqq IDENTIFIER
35 ( PARENTHESIS_L
35 ) PARENTHESIS_R
36 { BRACE_L
37 cout COUT
37 << LEFT_OP
37 "fhjdjfd" CONST_STRING
37 ; SEMICOLON
38 cout COUT
38 << LEFT_OP
38 func IDENTIFIER
38 ( PARENTHESIS_L
38 ) PARENTHESIS_R
38 ; SEMICOLON
39 cout COUT
39 << LEFT_OP
39 a IDENTIFIER
39 [ SQUARE_BRACKET_L
39 2 CONST_INTEGER
39 + PLUS
39 func IDENTIFIER
39 ( PARENTHESIS_L
39 ) PARENTHESIS_R
39 ] SQUARE_BRACKET_R
39 ; SEMICOLON
40 cin CIN
40 >> RIGHT_OP
40 s IDENTIFIER
40 ; SEMICOLON
41 cin CIN
41 >> RIGHT_OP
41 m IDENTIFIER
41 [ SQUARE_BRACKET_L
41 0 CONST_INTEGER
41 ] SQUARE_BRACKET_R
41 [ SQUARE_BRACKET_L
41 0 CONST_INTEGER
41 ] SQUARE_BRACKET_R
41 ; SEMICOLON
42 cin CIN
42 >> RIGHT_OP
42 non_func IDENTIFIER
42 ; SEMICOLON
44 return RETURN
44 "ssss" CONST_STRING
44 ; SEMICOLON
45 } BRACE_R
47 int INT
47 main IDENTIFIER
47 ( PARENTHESIS_L
47 int INT
47 a IDENTIFIER
47 , COMMA
47 string STRING
47 b IDENTIFIER
47 , COMMA
47 char CHAR
47 c IDENTIFIER
47 ) PARENTHESIS_R
48 { BRACE_L
49 a IDENTIFIER
49 [ SQUARE_BRACKET_L
49 34 CONST_INTEGER
49 ] SQUARE_BRACKET_R
49 = ASSIGN_OP
49 4 CONST_INTEGER
49 ; SEMICOLON
50 int INT
50 q IDENTIFIER
50 = ASSIGN_OP
50 4 CONST_INTEGER
50 ; SEMICOLON
51 int INT
51 a IDENTIFIER
51 [ SQUARE_BRACKET_L
51 4 CONST_INTEGER
51 ] SQUARE_BRACKET_R
51 ; SEMICOLON
52 q IDENTIFIER
52 = ASSIGN_OP
52 12354 CONST_INTEGER
52 ; SEMICOLON
53 float FLOAT
53 er IDENTIFIER
53 [ SQUARE_BRACKET_L
53 2 CONST_INTEGER
53 ] SQUARE_BRACKET_R
53 [ SQUARE_BRACKET_L
53 44 CONST_INTEGER
53 + PLUS
53 ww IDENTIFIER
53 [ SQUARE_BRACKET_L
53 "hjfdf" CONST_STRING
53 ] SQUARE_BRACKET_R
53 / SLASH
53 j IDENTIFIER
53 [ SQUARE_BRACKET_L
53 i IDENTIFIER
53 + PLUS
53 3 CONST_INTEGER
53 ] SQUARE_BRACKET_R
53 [ SQUARE_BRACKET_L
53 4 CONST_INTEGER
53 * STAR
53 g IDENTIFIER
53 ] SQUARE_BRACKET_R
53 ] SQUARE_BRACKET_R
53 ; SEMICOLON
55 int INT
55 wrnjnf IDENTIFIER
55 = ASSIGN_OP
55 14 CONST_INTEGER
55 ; SEMICOLON
56 string STRING
56 s IDENTIFIER
56 = ASSIGN_OP
56 3 CONST_INTEGER
56 ; SEMICOLON
57 int INT
57 a IDENTIFIER
57 = ASSIGN_OP
57 ( PARENTHESIS_L
57 f IDENTIFIER
57 - MINUS
57 - MINUS
57 d IDENTIFIER
57 * STAR
57 ( PARENTHESIS_L
57 9 CONST_INTEGER
57 + PLUS
57 6 CONST_INTEGER
57 ) PARENTHESIS_R
57 - MINUS
57 ( PARENTHESIS_L
57 4 CONST_INTEGER
57 + PLUS
57 1512 CONST_INTEGER
57 - MINUS
57 ( PARENTHESIS_L
57 e IDENTIFIER
57 / SLASH
57 9 CONST_INTEGER
57 ) PARENTHESIS_R
57 * STAR
57 d IDENTIFIER
57 ) PARENTHESIS_R
57 ) PARENTHESIS_R
57 ; SEMICOLON
58 map MAP
58 < LESS
58 string STRING
58 , COMMA
58 int INT
58 > GREATER
58 abba IDENTIFIER
58 ; SEMICOLON
60 return RETURN
60 0 CONST_INTEGER
60 ; SEMICOLON
61 } BRACE_R
